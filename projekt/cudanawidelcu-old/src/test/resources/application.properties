# konfiguracja JDBC URL połączenia do bazy H2; mem w URL oznacza, że dane bazy będą przechowywane pamięci RAM (tryb in-mememory) i zostaną utracone w momencie zamknięcia aplikacji.
#  Parametr H2 DB_CLOSE_DELAY=-1 powoduje, że baza w trybie in-memory nie będzie zamknieta po zerwaniu ostatniego połączenia (domyślne działanie)
spring.datasource.url=jdbc:h2:mem:;DB_CLOSE_DELAY=-1
# włączenie wypisywanie zapytań generowanych przez implementację JPA do dziennika - będy widoczne na standardowym wyjściu
spring.datasource.username=sa
spring.datasource.password=sa
# włączenie wypisywanie zapytañ SQL generowanych przez implementacjê JPA do dziennika - błędy widoczne na standardowym wyjściu
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# W domślnej konfiguracji Spring Data JPA, implementacja JPA (Hibernate) po uruchomieniu bazy danych spróbuje utworzyć jej schemat
# wysy³aj¹c odpowiednie instrukcje SQL (CREATE TABLE, ALTER ...) wygenerowane na bazie struktury klas encji w aplikacji
# (klas z adnotacją @Entity), a w momencie zamknięcia aplikacji zostaną wysłane instrukcje DROP usuwające dane i schemat.
# Można to zmienić parametrem spring.jpa.hibernate.ddl-auto. Możliwe wartości to:
# validate: validate the schema, makes no changes to the database.
# update: update the schema.
# create: creates the schema, destroying previous data.
# create-drop: drop the schema at the end of the session - domyślnie
# none: is all other cases.
spring.jpa.hibernate.ddl-auto=update

